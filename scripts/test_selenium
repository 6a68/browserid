#!/usr/bin/env node

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


// This is a travis-ci specific script that triggers selenium test runs on
// testy-listener.personatest.org.

const spawn         = require('child_process').spawn,
      testy_url     = process.env['TESTY_URL'] || 'http://testy-listener.personatest.org/test',
      repo_url      = process.env['REPO_URL'],
      repo_sha      = process.env['REPO_SHA'];

function getRepoInfo(done) {
  getSHA(function(sha) {
    getOrigin(function(origin) {
      done && done({
        sha: sha,
        repo: origin
      });
    });
  });
}

function getSHA(done) {
  if (repo_sha) {
    done && done(repo_sha);
  }
  else {
    // next try using git
    var p = spawn('git', [ 'log', '--pretty=%H', '-1' ]);
    var buf = "";
    p.stdout.on('data', function(d) {
      buf += d;
    });
    p.stdout.on('end', function(code, signal) {
      var gitsha = buf.toString().trim();
      if (gitsha && gitsha.length === 40) {
        done && done(gitsha)
      }
      else {
        console.error('incorrect git sha length');
      }
    });
  }
}

function getOrigin(done) {
  if (repo_url) {
    done && done(repo_url);
  }
  else {
    var p = spawn('git', [ 'config', '--get', 'remote.origin.url' ]);
    var buf = "";
    p.stdout.on('data', function(d) {
      buf += d;
    });
    p.stdout.on('end', function(code, signal) {
      done && done(buf.replace(/[\n\r]/, ''));
    });
  }
}


function runTests(repo, sha, done) {
  console.log(" >>> Starting selenium tests on", repo, sha);

  var p = spawn('curl', [ '-s', '-N', '--data', 'repo=' + repo + '&' + 'sha=' + sha, testy_url ]);

  var buf = "";
  p.stdout.on('data', function(d) {
    buf += d.toString();
  });

  p.stdout.pipe(process.stdout);
  p.stderr.pipe(process.stderr);

  p.on('end', function(code, signal) {
    if (!code) {
      // make sure at least one testsuite was run but there are no errors.
      var success = buf.indexOf("</testsuite>") > -1 
                 && buf.indexOf("</error>") === -1;
      code = success ? 0 : 1;
    }
    done && done(code);
  });
}

getRepoInfo(function(info) {
  runTests(info.repo, info.sha, function(err, status) {
    process.exit(status);
  });
});
